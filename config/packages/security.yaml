security:
  enable_authenticator_manager: true
  password_hashers:
    App\Common\Entity\User:
      algorithm: bcrypt
      cost: 12
  providers:
    db_user_provider:
      entity:
        class: App\Common\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: db_user_provider
      custom_authenticator: App\Common\Security\LoginFormAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

  role_hierarchy:
    ROLE_ADMIN:
      - ROLE_CLIENT
      - ROLE_SALESMAN
    ROLE_CLIENT:
      - ROLE_USER
    ROLE_SALESMAN:
      - ROLE_USER

  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/signup, roles: PUBLIC_ACCESS }
    - { path: ^/, roles: [ ROLE_CLIENT, ROLE_SALESMAN ] }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
